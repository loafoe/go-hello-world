apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: go-hello-world
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-hello-world
  template:
    metadata:
      labels:
        app: go-hello-world
      annotations:
        pod.boostport.com/vault-approle: go-hello-world
        pod.boostport.com/vault-init-container: get-vault-token
    spec:
      hostNetwork: false
      containers:
      - name: go-hello-world
        image: docker.na1.hsdp.io/wellcentive/go-hello-world:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080  
        resources:
          limits: {}
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
      imagePullSecrets:
      - name: docker.na1.hsdp.io
      initContainers:
      - name: get-vault-token
        image: boostport/kubernetes-vault-init
        imagePullPolicy: Always
        env:
        - name: VAULT_ROLE_ID
          value: aff6b304-415e-f405-2b31-0ab1d5fc3c1c
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
      volumes:
      - name: vault-token
        emptyDir: {}


---
apiVersion: v1
kind: Service
metadata:
  name: hello-world
  labels:
    app: go-hello-world
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: go-hello-world
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: go-hello-world
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - "*.qa.terrakube.com"
    - "hello-world.qa.terrakube.com"
    secretName: qa-wildcard
  rules:  
  - host: hello-world.qa.terrakube.com
    http:
      paths:
      - backend:
          serviceName: hello-world
          servicePort: 8080
